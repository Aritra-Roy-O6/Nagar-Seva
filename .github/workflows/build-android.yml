name: Build Android APK

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'client-citizen/package-lock.json'  # Fixed path

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      working-directory: ./client-citizen
      run: |
        rm -rf node_modules package-lock.json
        npm install

    - name: Try simple Expo build without complications
      working-directory: ./client-citizen
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      run: |
        # Create minimal eas.json
        cat > eas.json << 'EOF'
        {
          "cli": {
            "version": ">= 7.6.0"
          },
          "build": {
            "preview": {
              "distribution": "internal",
              "android": {
                "buildType": "apk"
              }
            }
          }
        }
        EOF
        
        # Simple build without complications
        npx eas build --profile preview --platform android --wait

    - name: Download APK
      working-directory: ./client-citizen
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      run: |
        BUILD_INFO=$(npx eas build:list --platform=android --limit=1 --json)
        BUILD_URL=$(echo $BUILD_INFO | jq -r '.[0].artifacts.buildUrl')
        wget -O app-release.apk "$BUILD_URL"

    - name: Upload APK to Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: client-citizen/app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}